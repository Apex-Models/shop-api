name: Deploy PROD to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build & Deploy to PROD
    runs-on: ubuntu-latest
    env:
      EC2_PROD_HOST: ${{ secrets.EC2_PROD_HOST }}
      EC2_PROD_SSH_KEY: ${{ secrets.EC2_PROD_SSH_KEY }}
      EC2_PROD_PORT: ${{ secrets.EC2_PROD_PORT }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci
      - run: npm run build

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.EC2_PROD_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ env.EC2_PROD_HOST }} >> ~/.ssh/known_hosts

      - name: Copy to EC2 PROD
        run: |
          tar -czf deploy.tar.gz dist/ package*.json prisma/
          scp -i ~/.ssh/id_rsa -P ${{ env.EC2_PROD_PORT }} deploy.tar.gz ec2-user@${{ env.EC2_PROD_HOST }}:/tmp/

      - name: Deploy and restart app on EC2
        run: |
          ssh -i ~/.ssh/id_rsa -p ${{ env.EC2_PROD_PORT }} ec2-user@${{ env.EC2_PROD_HOST }} << 'EOF'
            # Create directory and extract
            mkdir -p ~/prod-api
            cd ~/prod-api
            tar -xzf /tmp/deploy.tar.gz
            
            # Install dependencies and restart
            npm install --omit=dev
            npx prisma generate
            pm2 reload prod-api || pm2 start dist/app.js --name "prod-api"
            pm2 save
          EOF