generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relation avec les commandes
  orders    Order[]
}

model Product {
  id              Int      @id @default(autoincrement())
  name            String
  description     String
  price           Float
  imageUrl        String[]
  ObjectModelData String?
  type            String
  category        String[]
  status          String   @default("active")
  stripeProductId String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  orderItems      OrderItem[]
}

model Order {
  id            Int         @id @default(autoincrement())
  userId        Int
  total         Float
  orderStatus   String      @default("pending") // pending, processing, shipped, delivered, cancelled
  paymentStatus String      @default("pending") // pending, succeded, failed, refunded
  
  // Address information (on garde pour l'adresse de livraison qui peut être différente de celle du user)
  street        String
  city          String
  postalCode    String
  country       String
  
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  
  // Relations
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  items         OrderItem[]
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  orderId     Int
  productId   Int
  productName String
  quantity    Int
  unitPrice   Float
  totalPrice  Float
  
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product  @relation(fields: [productId], references: [id])
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}